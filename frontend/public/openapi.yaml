openapi: '3.0.3'
info:
  title: Mastodon API Specification (https://github.com/mastodon/mastodon)
  version: '1.0'
  contact:
    name: Sardorbek Pulatov
    email: sardo@hey.com
servers:
  - url: https://mastodon.social
paths:
  /api/v1/apps:
    post:
      tags:
        - apps
      description: Create a new application to obtain OAuth2 credentials.
      requestBody:
          content:
            application/form-data:
              schema:
                type: object
                required:
                  - client_name
                  - redirect_uris
                properties:
                  client_name:
                    description: A name for your application
                    type: string
                  redirect_uris:
                    description: Where the user should be redirected after authorization. To display the authorization code to the user instead of redirecting to a web page, use urn:ietf:wg:oauth:2.0:oob in this parameter.
                    type: string
                  scopes:
                    description: Space separated list of scopes. If none is provided, defaults to read.
                    type: string
                  website:
                    description: A URL to the homepage of your app
                    type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                   type: string
                  website:
                    type: string
                  redirect_uri:
                    type: string
                  client_id:
                    type: string
                  client_secret:
                    type: string
                  vapid_key:
                    type: string
        '422':
          description: If a required parameter is missing or improperly formatted, the request will fail.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/apps/verify_credentials:
    get:
      tags:
        - apps
      description: Confirm that the app's OAuth2 credentials work.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: If the Authorization header was provided with a valid token, you should see your app returned as an Application entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        '401':
          description: If the Authorization header contains an invalid token, is malformed, or is not present, an error will be returned indicating an authorization failure.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /oauth/authorize:
    description: Generate and manage OAuth tokens.
    get:
      tags:
        - oauth
      description: Displays an authorization form to the user. If approved, it will create and return an authorization code, then redirect to the desired redirect_uri, or show the authorization code if urn:ietf:wg:oauth:2.0:oob was requested. The authorization code can be used while requesting a token to obtain access to user-level methods.
      parameters:
        - name: response_type
          description: Should be set equal to code.
          in: query
          required: true
          schema:
            type: string
        - name: client_id
          description: Client ID, obtained during app registration.
          in: query
          required: true
          schema:
            type: string
        - name: redirect_uri
          description: Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown instead. Must match one of the redirect URIs declared during app registration.
          in: query
          required: true
          schema:
            type: string
        - name: scope
          description: List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). Must be a subset of scopes declared during app registration. If not provided, defaults to read.
          in: query
          schema:
            type: string
        - name: force_login
          description: Added in 2.6.0. Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance.
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: The authorization code will be returned as a query parameter named code.
        '400':
          description: If the authorization code is incorrect or has been used already, the request will fail.
          content:
            application/json:
             schema:
              $ref: "#/components/schemas/Error"

  /oauth/token:
    description: Obtain a token
    post:
      tags:
        - oauth
      description: Returns an access token, to be used during API calls that are not public.
      requestBody:
          content:
            application/form-data:
              schema:
                type: object
                required:
                  - grant_type
                  - client_id
                  - client_secret
                  - redirect_uri
                properties:
                  grant_type:
                    description: Set equal to authorization_code if code is provided in order to gain user-level access. Otherwise, set equal to client_credentials to obtain app-level access only.
                    type: string
                  client_id:
                    description: Client ID, obtained during app registration
                    type: string
                  client_secret:
                    description: Client secret, obtained during app registration
                    type: string
                  redirect_uri:
                    description: Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the token will be shown instead. Must match one of the redirect URIs declared during app registration.
                    type: string
                  scopes:
                    description: List of requested OAuth scopes, separated by spaces. Must be a subset of scopes declared during app registration. If not provided, defaults to read.
                    type: string
                  code:
                    description: A user authorization code, obtained via /oauth/authorize
                    type: string
      responses:
        '200':
          description: Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    example: ZA-Yj3aBD8U8Cm7lKUp-lm9O9BmDgdhHzDeqsY8tlL0
                    type: string
                  token_type:
                    example: Bearer
                    type: string
                  scope:
                    example: read write follow push
                    type: string
                  created_at:
                    description: UNIX timestamp
                    example: 1573979017
                    type: integer
        '400':
          description: If you try to request a scope that was not included when registering the app, the request will fail.
          content:
            application/json:
             schema:
              $ref: "#/components/schemas/Error"
        '401':
          description: If client_id and client_secret do not match or are invalid, the request will fail.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /oauth/revoke:
    post:
      tags:
        - oauth
      description: Revoke an access token to make it no longer valid for use.
      requestBody:
          content:
            application/form-data:
              schema:
                type: object
                required:
                  - client_id
                  - client_secret
                  - token
                properties:
                  client_id:
                    description: Client ID, obtained during app registration
                    type: string
                  client_secret:
                    description: Client secret, obtained during app registration
                    type: string
                  token:
                    description: The previously obtained token, to be invalidated
                    type: string
      responses:
        '200':
          description: If you own the provided token, the API call will provide an empty response. This operation is idempotent, so calling this API multiple times will still return OK.
        '403':
          description: If you provide a token you do not own, or no token at all, the API call will return a 403 error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/statuses:
    parameters:
      - in: header
        name: Idempotency-Key
        description: Prevent duplicate submissions of the same status. Idempotency keys are stored for up to 1 hour, and can be any arbitrary string. Consider using a hash or UUID generated client-side.
        schema:
          type: string

    post:
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  status:
                    description: Text content of the status. If `media_ids` is provided, this becomes optional. Attaching a `poll` is optional while `status` is provided.
                    type: string
                  media_ids:
                    description: Array of Attachment ids to be attached as media. If provided, `status` becomes optional, and `poll` cannot be used.
                    type: array
                    items:
                      type: string
                  poll:
                    type: array
                    items:
                      type: object
                    additionalProperties: true
                  in_reply_to_id:
                    description: ID of the status being replied to, if status is a reply
                    type: string
                  sensitive:
                    description: Mark status and attached media as sensitive?
                    type: boolean
                  spoiler_text:
                    description: Text to be shown as a warning or subject before the actual content. Statuses are generally collapsed behind this field.
                    type: string
                  visibility:
                    description: Visibility of the posted status. Enumerable oneOf public, unlisted, private, direct.
                    type: string
                    enum:
                      - public
                      - unlisted
                      - private
                      - direct
                  scheduled_at:
                    description: ISO 8601 Datetime at which to schedule a status. Providing this paramter will cause ScheduledStatus to be returned instead of Status. Must be at least 5 minutes in the future.
                    type: string
                  language:
                    description: ISO 639 language code for this status.
                    type: string
      responses:
        '200':
          description: Status will be posted with chosen parameters. If scheduled_at is provided, then a ScheduledStatus will be returned instead.
          content:
            application/json:
              schema:
                oneOf:
                 - $ref: "#/components/schemas/Status"
                 - $ref: "#/components/schemas/ScheduledStatus"
        '401':
          description: Invalid or missing Authorization header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /api/v1/statuses/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: Local ID of a status in the database.
        schema:
          type: string
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status will be posted with chosen parameters. If scheduled_at is provided, then a ScheduledStatus will be returned instead.
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Status"
        '401':
          description: Invalid or missing Authorization header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Status does not exist, is deleted, or is private.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status will be posted with chosen parameters. If scheduled_at is provided, then a ScheduledStatus will be returned instead.
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/Status"
        '401':
          description: Invalid or missing Authorization header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Status does not exist, is deleted, or is private.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"



    parameters:
      - in: path
        name: id
        required: true
        description: Local ID of a status in the database.
        schema:
          type: string
    post:
      security:
        - bearerAuth: []
      description: Remove a status from your private bookmarks.
      responses:
          '200':
            description: Status unbookmarked
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Status"
          '401':
            description: Invalid or missing Authorization header
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
          '404':
            description: Status does not exist, is deleted, or is private
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"


  /api/v1/timelines/public:
    get:
      description: Public timeline
      parameters:
        - name: local
          description: Show only local statuses? Defaults to false.
          in: query
          schema:
            type: boolean
            default: false
        - name: remote
          description: Show only local statuses? Defaults to false.
          in: query
          schema:
            type: boolean
            default: false
        - name: only_media
          description: Show only statuses with media attached? Defaults to false..
          in: query
          schema:
            type: boolean
            default: false
        - name: limit
          description: Max number of results to return. Defaults to 20.
          in: query
          schema:
            type: integer
            default: 20
        - name: max_id
          description: Return results older than ID
          in: query
          schema:
            type: string
        - name: since_id
          description: Return results newer than ID
          in: query
          schema:
            type: string
        - name: min_id
          description: Return results immediately newer than ID
          in: query
          schema:
            type: string
      responses:
        '200':
          description: get statuses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"

  /api/v1/timelines/home:
    get:
      security:
        - bearerAuth: []
      description: View statuses from followed users.
      parameters:
        - name: local
          description: Show only local statuses? Defaults to false.
          in: query
          schema:
            type: boolean
            default: false
        - name: limit
          description: Max number of results to return. Defaults to 20.
          in: query
          schema:
            type: integer
            default: 20
        - name: max_id
          description: Return results older than ID
          in: query
          schema:
            type: string
        - name: since_id
          description: Return results newer than ID
          in: query
          schema:
            type: string
        - name: min_id
          description: Return results immediately newer than ID
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get statuses for home.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
        '206':
          description: Home feed is regenerating
        '401':
            description: Invalid or missing Authorization header
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  
  /api/v1/notifications:
    get:
      security:
          - bearerAuth: []
      description: Notifications concerning the user. This API returns Link headers containing links to the next/previous page. However, the links can also be constructed dynamically using query params and id values.
      parameters:
        - name: limit
          description: Max number of results to return. Defaults to 20.
          in: query
          schema:
            type: integer
            default: 20
        - name: max_id
          description: Return results older than ID
          in: query
          schema:
            type: string
        - name: since_id
          description: Return results newer than ID
          in: query
          schema:
            type: string
        - name: min_id
          description: Return results immediately newer than ID
          in: query
          schema:
            type: string
        - name: exclude_types
          description: Array of types to exclude (follow, favourite, reblog, mention, poll, follow_request)
          in: query
          schema:
            type: array
            items:
              type: string
        - name: account_id
          description: Return only notifications received from this account
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        '401':
            description: Invalid or missing Authorization header
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /api/v1/notifications/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: ID of the notification in the database.
        schema:
          type: string
    get:
      security:
          - bearerAuth: []
      description: View information about a notification with a given ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        '401':
            description: Invalid or missing Authorization header
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /api/v1/notifications/clear:
    post:
      security:
          - bearerAuth: []
      description: Clear all notifications from the server.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
        '401':
            description: Invalid or missing Authorization header
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /api/v1/notifications/{id}/dismiss:
    parameters:
      - in: path
        name: id
        required: true
        description: ID of the notification in the database.
        schema:
          type: string
    post:
      security:
          - bearerAuth: []
      description: Clear a single notification from the server.
      responses:
        '200':
          description: Notification with given ID successfully dismissed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        '401':
            description: Invalid or missing Authorization header
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  

  /api/v2/search:
    get:
      security:
        - bearerAuth: []
      description: Search results
      parameters:
        - name: q
          in: query
          description: What to search for
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results. Defaults to 40.
          schema:
            type: integer
            default: 20
        - name: resolve
          in: query
          description: Attempt WebFinger lookup.
          schema:
            type: string
        - name: following
          in: query
          description: Only who the user is following. Defaults to false.
          schema:
            type: boolean
        - name: account_id
          in: query
          description: If provided, statuses returned will be authored only by this account
          schema:
            type: string
        - name: max_id
          in: query
          description: Return results older than this id
          schema:
            type: string
        - name: min_id
          in: query
          description: Return results immediately newer than this id
          schema:
            type: string
        - name: type
          in: query
          description: Enum(accounts, hashtags, statuses)
          schema:
            type: string
            enum:
              - accounts
              - hashtags
              - statuses
        - name: exclude_unreviewed
          in: query
          description: Filter out unreviewed tags? Defaults to false. Use true when trying to find trending tags.
          schema:
            type: boolean
        - name: offset
          in: query
          description: Offset in search results. Used for pagination. Defaults to 0.
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
                  statuses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Tag"
                  hashtags:
                    type: array
                    items:
                      $ref: "#/components/schemas/Status"
        '401':
          description: Invalid or missing Authorization header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


components:
  schemas:
    Account:
      description: Represents a user of Mastodon and their associated profile.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/account/
      type: object
      properties:
        # Base Attributes
        id:
          description: The account id `header`.
          type: string
        username:
          description: The username of the account, not including domain.
          type: string
        acct:
          description: The Webfinger account URI. Equal to `username` for local users, or `username@domain` for
          type: string
        url:
          description: The location of the user's profile page. (HTTPS URL)
          type: string
        # Display Attributes
        display_name:
          description: The profile's display name.
          type: string
        note:
          description: The profile's bio / description.
          type: string
        avatar:
          description: An image icon that is shown next to statuses and in the profile. The format is URL.
          type: string
        avatar_static:
          description: A static version of the avatar. Equal to `avatar` if its value is a static image; different if `avatar` is an animated GIF. The format is URL.
          type: string
        header:
          description: An image banner that is shown above the profile and in profile cards. The format is URL.
          type: string
        header_static:
          description: A static version of the header. Equal to `header` if its value is a static image; different if `header` is an animated GIF. The format is URL.
          type: string
        locked:
          description: Whether the account manually approves follow requests.
          type: boolean
        emojis:
          description: Custom emoji entities to be used when rendering the profile. If none, an empty array will be returned.
          type: array
          items:
            $ref: "#/components/schemas/Emoji"
        discoverable:
          description: Whether the account has opted into discovery features such as the profile directory.
          type: boolean
        # Statistical attributes
        created_at:
          description: When the account was created.
          type: string
          format: date-time
        last_status_at:
          description: When the most recent status was posted.
          type: string
          format: date-time
        statuses_count:
          description: How many statuses are attached to this account.
          type: integer
        followers_count:
          description: The reported followers of this profile.
          type: integer
        following_count:
          description: The reported follows of this profile.
          type: integer
        # Optional attributes
        moved:
          $ref: "#/components/schemas/Account"
        fields:
          description: Additional metadata attached to a profile as name-value pairs.
          type: array
          items:
            $ref: "#/components/schemas/Field"
        bot:
          description: A presentational flag. Indicates that the account may perform automated actions, may not be monitored, or identifies as a robot.
          type: boolean
        source:
          $ref: "#/components/schemas/Source"
        suspended:
          description: An extra entity returned when an account is suspended.
          type: boolean
        mute_expires_at:
          description: When a timed mute will expire, if applicable. ISO 8601 Datetime.
          type: string
          format: date-time

    Activity:
      description: Represents a weekly bucket of instance activity.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/activity/
      type: object
      properties:
        week:
          description: Midnight at the first day of the week.  (UNIX Timestamp).
          type: string
        statuses:
          description: Statuses created since the week began, String (cast from an integer).
          type: string
        logins:
          description: User logins since the week began, String (cast from an integer).
          type: string
        registrations:
          description: User registrations since the week began, String (cast from an integer).
          type: string

    AdminAccount:
      description: Admin-level information about a given account.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/admin-account/
      type: object
      properties:
        id:
          description: The ID of the account in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        username:
          description: The username of the account.
          type: string
        created_at:
          description: When the account was first discovered.
          type: string
          format: date-time
        email:
          description: The email address associated with the account.
          type: string
        ip:
          description: The IP address last used to login to this account.
          type: string
        locale:
          description: The locale of the account. ISO 639 Part 1 two-letter language code.
          type: string
        invite_request:
          description: Invite request text ???
          type: string
        # State Attributes
        role:
          description: The current role of the account. Enumerable oneOf.
          type: string
        confirmed:
          description: Whether the account has confirmed their email address.
          type: boolean
        approved:
          description: Whether the account is currently approved.
          type: boolean
        disabled:
          description: Whether the account is currently disabled.
          type: boolean
        silenced:
          description: Whether the account is currently silenced.
          type: boolean
        suspended:
          description: Whether the account is currently suspended.
          type: boolean
        account:
          $ref: "#/components/schemas/Account"
        # Nullable attributes
        created_by_application_id:
          description: The ID of the application that created this account. Cast from an integer, but not guaranteed to be a number.
          type: string
        invited_by_account_id:
          description: The ID of the account that invited this user. Cast from an integer, but not guaranteed to be a number.
          type: string

    AdminReport:
      description: Admin-level information about a filed report.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/admin-report/
      properties:
        id:
          description: The ID of the report in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        action_taken:
          description: The action taken to resolve this report. Enumerable oneOf.
          type: string
        comment:
          description: An optional reason for reporting.
          type: string
        created_at:
          description: The time the report was filed.
          type: string
          format: date-time
        updated_at:
          description: The time of last action on this report.
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/Account"
        target_account:
          $ref: "#/components/schemas/Account"
        assigned_account:
          $ref: "#/components/schemas/Account"
        statuses:
          description: Statuses attached to the report, for context.
          type: array
          items:
            $ref: "#/components/schemas/Status"

    Announcement:
      description: Represents an announcement set by an administrator.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/announcement/
      required:
        - id
        - text
        - published
        - all_day
        - created_at
        - updated_at
        - read
      properties:
        id:
          description: The announcement id. Cast from an integer, but not guaranteed to be a number.
          type: string
        text:
          description: The content of the announcement.
          type: string
        published:
          description: Whether the announcement is currently active.
          type: boolean
        all_day:
          description: Whether the announcement has a start/end time.
          type: boolean
        created_at:
          description: When the announcement was created.
          type: string
        updated_at:
          description: When the announcement was last updated. ISO 8601 Datetime.
          type: string
        read:
          description: Whether the announcement has been read by the user.
          type: boolean
        # Optional attributes
        scheduled_at:
          description: When the future announcement was scheduled. ISO 8601 Datetime.
          type: string
        starts_at:
          description: When the future announcement will start. ISO 8601 Datetime.
          type: string
        ends_at:
          description: When the future announcement will end. ISO 8601 Datetime.
          type: string

    AnnouncementReaction:
      description: Represents an emoji reaction to an Announcement.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/announcementreaction/
      properties:
        name:
          description: The emoji used for the reaction. Either a unicode emoji, or a custom emoji's shortcode.
          type: string
        count:
          description: The total number of users who have added this reaction.
          type: integer
        me:
          description: Whether the authorized user has added this reaction to the announcement.
          type: boolean
        # Custom emoji attributes
        url:
          description: A link to the custom emoji (URL).
          type: string
        static_url:
          description: A link to a non-animated version of the custom emoji (URL).
          type: string

    Application:
      description: Represents an application that interfaces with the REST API to access accounts or post statuses.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/application/
      required:
        - name
      properties:
        name:
          description: The name of your application.
          type: string
        website:
          description: The website associated with your application. Must be URL.
          type: string
        vapid_key:
          description: Used for Push Streaming API. Returned with [POST /api/v1/apps](https://docs.joinmastodon.org/methods/apps/#create-an-application). Equivalent to [PushSubscription#server_key](https://docs.joinmastodon.org/entities/pushsubscription/#server_key)
          type: string
        # Client attributes
        client_id:
          description: Client ID key, to be used for obtaining OAuth tokens
          type: string
        client_secret:
          description: Client secret key, to be used for obtaining OAuth tokens
          type: string

    Attachment:
      description: Represents a file or media attachment that can be added to a status.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/attachment/
      required:
        - id
        - type
        - url
        - preview_url
      properties:
        id:
          description: The ID of the attachment in the database. Cast from an integer but not guaranteed to be a number
          type: string
        type:
          description: The type of the attachment.
          type: string
          enum:
            - unknown
            - image
            - gifv
            - video
            - audio
        url:
          description: The location of the original full-size attachment.
          type: string
        preview_url:
          description: The location of a scaled-down preview of the attachment.
          type: string
        # Optional attributes
        remote_url:
          description: The location of the full-size original attachment on the remote website. String or null if the attachment is local.
          type: string
        meta:
          description: Metadata returned by Paperclip.
          type: object
        description:
          description: Alternate text that describes what is in the media attachment, to be used for the visually impaired or when media attachments do not load.
          type: string
        blurhash:
          description: A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.
          type: string
        # Deprecated attributes
        text_url:
          description: A shorter URL for the attachment.
          deprecated: true
          type: string

    Card:
      description: Represents a rich preview card that is generated using OpenGraph tags from a URL.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/card/
      required:
        - url
        - title
        - description
        - type
      properties:
        url:
          description: Location of linked resource.
          type: string
        title:
          description: Title of linked resource.
          type: string
        description:
          description: Description of preview.
          type: string
        type:
          description: The type of the preview card. String (Enumerable, oneOf).
          type: string
          enum:
            - link
            - photo
            - video
            - rich
        author_name:
          description: The author of the original resource.
          type: string
        author_url:
          description: A link to the author of the original resource.
          type: string
        provider_name:
          description: The provider of the original resource.
          type: string
        provider_url:
          description: A link to the provider of the original resource.
          type: string
        html:
          description: HTML to be used for generating the preview card.
          type: string
        width:
          description: Width of preview, in pixels.
          type: integer
        height:
          description: Height of preview, in pixels.
          type: integer
        image:
          description: Preview thumbnail (URL).
          type: string
        blurhash:
          description: A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.
          type: string

    Context:
      description: Represents the tree around a given status. Used for reconstructing threads of statuses.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/context/
      required:
        - ancestors
        - descendants
      properties:
        ancestors:
          description: Parents in the thread.
          type: array
          items:
            $ref: "#/components/schemas/Status"
        descendants:
          description: Children in the thread.
          type: array
          items:
            $ref: "#/components/schemas/Status"

    Conversation:
      description: Represents a conversation with "direct message" visibility.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/conversation/
      required:
        - id
        - accounts
        - unread
      properties:
        id:
          description: Local database ID of the conversation. Cast from an integer, but not guaranteed to be a number
          type: string
        accounts:
          description: Participants in the conversation.
          type: array
          items:
            $ref: "#/components/schemas/Account"
        unread:
          description:  Is the conversation currently marked as unread?
          type: boolean
        last_status:
          $ref: "#/components/schemas/Status"

    Emoji:
      description: Represents a custom emoji.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/emoji/
      type: object
      required:
        - shortcode
        - url
        - static_url
        - visible_in_picker
      properties:
        shortcode:
          description: The name of the custom emoji.
          type: string
        url:
          description: A link to the custom emoji. The format is URL.
          type: string
        static_url:
          description: A link to a static copy of the custom emoji. The format is URL.
          type: string
        visible_in_picker:
          description: Whether this Emoji should be visible in the picker or unlisted.
          type: boolean
        category:
          description: Used for sorting custom emoji in the picker.
          type: string

    Error:
      description: Represents an error message.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/error/
      type: object
      required:
        - error
      properties:
        error:
         type: string
        error_description:
          type: string

    FeaturedTag:
      description: Represents a hashtag that is featured on a profile.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/featuredtag/
      properties:
        id:
          description: The internal ID of the featured tag in the database. Cast from integer but not guaranteed to be a number
          type: string
        name:
          description: The name of the hashtag being featured.
          type: string
        url:
          description: A link to all statuses by a user that contain this hashtag.
          type: string
        statuses_count:
          description: The number of authored statuses containing this hashtag.
          type: integer
        last_status_at:
          description: The timestamp of the last authored status containing this hashtag. ISO 8601 Datetime.
          type: string
          format: date-time

    Field:
      description: Represents a profile field as a name-value pair with optional verification.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/field/
      type: object
      properties:
        name:
          description: The key of a given field's key-value pair.
          type: string
        value:
          description: The value associated with the `name` key.
          type: string
        verified_at:
          description: Timestamp of when the server verified a URL value for a rel="me” link. If `value` is a verified URL. Otherwise, null
          type: string
          format: date-time

    Filter:
      description: Represents a user-defined filter for determining which statuses should not be shown to the user.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/filter/
      properties:
        id:
          description: The ID of the filter in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        phrase:
          description: The text to be filtered.
          type: string
        context:
          description: The contexts in which the filter should be applied.
          type: array
          items:
            type: string
            enum:
              - home
              - notifications
              - public
              - thread
        expires_at:
          description: When the filter should no longer be applied. ISO 8601 Datetime, or null if the filter does not expire
          type: string
        irreversible:
          description: Should matching entities in home and notifications be dropped by the server?
          type: boolean
        whole_word:
          description: Should the filter consider word boundaries?
          type: boolean

    History:
      description: Represents daily usage history of a hashtag.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/history/
      required:
        - day
        - uses
        - accounts
      properties:
        day:
          description: UNIX timestamp on midnight of the given day.
          type: string
        uses:
          description: the counted usage of the tag within that day. Cast from an integer.
          type: string
        accounts:
          description: the total of accounts using the tag within that day. Cast from an integer.
          type: string

    IdentityProof:
      description: Represents a proof from an external identity provider.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/identityproof/
      properties:
        provider:
          description: The name of the identity provider.
          type: string
        provider_username:
          description: The account owner's username on the identity provider's service.
          type: string
        profile_url:
          description: The account owner's profile URL on the identity provider.
          type: string
        proof_url:
          description: A link to a statement of identity proof, hosted by the identity provider.
          type: string
        updated_at:
          description: When the identity proof was last updated. ISO 8601 Datetime.
          type: string

    Instance:
      description: Represents the software instance of Mastodon running on this domain.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/instance/
      required:
        - uri
        - title
        - description
        - short_description
        - email
        - version
        - languages
        - registrations
        - approval_required
        - invites_enabled
        - urls
        - stats
        - user_count
        - status_count
        - domain_count
      properties:
        uri:
          description: The domain name of the instance.
          type: string
        title:
          description: The title of the website.
          type: string
        description:
          description: Admin-defined description of the Mastodon site.
          type: string
        short_description:
          description: A shorter description defined by the admin.
          type: string
        email:
          description: An email that may be contacted for any inquiries.
          type: string
        version:
          description: The version of Mastodon installed on the instance.
          type: string
        languages:
          description: Primary languages of the website and its staff. ISO 639 Part 1-5 language codes.
          type: array
          items:
            type: string
        registrations:
          description: Whether registrations are enabled.
          type: boolean
        approval_required:
          description: Whether registrations require moderator approval.
          type: boolean
        invites_enabled:
          description: Whether invites are enabled.
          type: boolean
        urls:
          description: URLs of interest for clients apps.
          type: object
        stats:
          description: Statistics about how much information the instance contains.
          type: object
        thumbnail:
          description: Banner image for the website.
          type: string
          nullable: true
        contact_account:
          $ref: "#/components/schemas/Account"

    List:
      description: Represents a list of some users that the authenticated user follows.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/list/
      required:
        - id
        - title
        - replies_policy
      properties:
        id:
          description: The internal database ID of the list. Cast from an integer, but not guaranteed to be a number.
          type: string
        title:
          description: The user-defined title of the list.
          type: string
        replies_policy:
          description: The user-defined title of the list.
          type: string
          enum:
            - followed
            - list
            - none

    Marker:
      description: Represents the last read position within a user's timelines.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/marker/
      properties:
        home:
          description: Information about the user's position in the home timeline.
          type: object
        notifications:
          description: Information about the user's position in their notifications.
          type: object
        last_read_id:
          description: The ID of the most recently viewed entity. Cast from integer but not guaranteed to be a number
          type: string
        updated_at:
          description: The timestamp of when the marker was set. ISO 8601 Datetime.
          type: string
          format: date-time
        version:
          description: Used for locking to prevent write conflicts.
          type: integer

    Mention:
      description: Represents a mention of a user within the content of a status.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/mention/
      required:
        - id
        - username
        - acct
        - url
      properties:
        id:
          description: The account id of the mentioned user. Cast from an integer, but not guaranteed to be a number
          type: string
        username:
          description: The username of the mentioned user.
          type: string
        acct:
          description: The webfinger acct URI of the mentioned user. Equivalent to `username` for local users, or `username@domain` for remote users.
          type: string
        url:
          description: The location of the mentioned user's profile.
          type: string

    Notification:
      description: Represents a notification of an event relevant to the user.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/notification/
      required:
        - id
        - type
        - created_at
        - account
      properties:
        id:
          description: The id of the notification in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        type:
          description: The type of event that resulted in the notification.
          type: string
          enum:
            - follow
            - follow_request
            - mention
            - reblog
            - favourite
            - poll
            - status
        created_at:
          description: The timestamp of the notification. ISO 8601 Datetime.
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/Account"
        status:
          $ref: "#/components/schemas/Status"

    Poll:
      description: Represents a poll attached to a status.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/poll/
      properties:
        id:
          description: The ID of the poll in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        expires_at:
          description: When the poll ends. ISO 8601 Datetime, or null if the poll does not end.
          type: string
          format: date-time
        expired:
          description: Is the poll currently expired?
          type: boolean
        multiple:
          description: Does the poll allow multiple-choice answers?
          type: boolean
        votes_count:
          description: How many votes have been received.
          type: integer
        voters_count:
          description: How many unique accounts have voted on a multiple-choice poll. Number, or null if `multiple` is false.
          type: integer
        voted:
          description: When called with a user token, has the authorized user voted? Boolean, or null if no current user
          type: boolean
        own_votes:
          description: When called with a user token, which options has the authorized user chosen? Contains an array of index values for `options`. Array of Number, or null if no current user
          type: array
          items:
            type: integer
        options:
          description: Possible answers for the poll.
          type: array
        emojis:
          description: Custom emoji to be used for rendering poll options.
          type: array
          items:
            $ref: "#/components/schemas/Emoji"

    Preferences:
      description: Represents a user's preferences.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/preferences/
      properties:
        posting:default:visibility:
          description: Default visibility for new posts. Equivalent to [Source#privacy](https://docs.joinmastodon.org/entities/source/#privacy).
          type: string
          enum:
            - public
            - unlisted
            - private
            - direct
        posting:default:sensitive:
          description: Default sensitivity flag for new posts. Equivalent to [Source#sensitive](https://docs.joinmastodon.org/entities/source/#sensitive).
          type: boolean
        posting:default:language:
          description: Default language for new posts. Equivalent to [Source#language](https://docs.joinmastodon.org/entities/source/#language). ISO 639-1 language two-letter code, or null
          type: string
        reading:expand:media:
          description: Whether media attachments should be automatically displayed or blurred/hidden.
          type: string
          enum:
            - default
            - show_all
            - hide_all
        reading:expand:spoilers:
          description: Whether CWs should be expanded by default.
          type: boolean

    PushSubscription:
      description: Represents a subscription to the push streaming server.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/pushsubscription/
      required:
        - id
        - endpoint
        - server_key
        - alerts
      properties:
        id:
          description: The ID of the push subscription in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        endpoint:
          description: Where push alerts will be sent to.
          type: string
        server_key:
          description: The streaming server's VAPID key.
          type: string
        alerts:
          description: Which alerts should be delivered to the `endpoint`.
          type: object

    Relationship:
      description: Represents the relationship between accounts, such as following / blocking / muting / etc.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/relationship/
      required:
        - id
        - following
        - requested
        - endorsed
        - followed_by
        - muting
        - muting_notifications
        - showing_reblogs
        - notifying
        - blocking
        - domain_blocking
        - blocked_by
        - note
      properties:
        id:
          description: The account id. Cast from an integer, but not guaranteed to be a number.
          type: string
        following:
          description: Are you following this user?
          type: boolean
        requested:
          description: Do you have a pending follow request for this user?
          type: boolean
        endorsed:
          description: Are you featuring this user on your profile?
          type: boolean
        followed_by:
          description: Are you followed by this user?
          type: boolean
        muting:
          description: Are you muting this user?
          type: boolean
        muting_notifications:
          description: Are you muting notifications from this user?
          type: boolean
        showing_reblogs:
          description: Are you receiving this user's boosts in your home timeline?
          type: boolean
        notifying:
          description: Have you enabled notifications for this user?
          type: boolean
        blocking:
          description: Are you blocking this user?
          type: boolean
        domain_blocking:
          description: Are you blocking this user's domain?
          type: boolean
        blocked_by:
          description: Is this user blocking you?
          type: boolean
        note:
          description: This user's profile bio
          type: string

    Report:
      description: Reports filed against users and/or statuses, to be taken action on by moderators.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/report/
      properties:
        id:
          type: string
        action_taken:
          type: boolean
        action_taken_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        category:
          type: string
          enum:
            - other
            - spam
            - violation
        comment:
          type: string
        forwarded:
          type: boolean
        status_ids:
          type: array
          items:
            type: integer
        rule_ids:
          type: array
          items:
            type: integer
        target_account:
          $ref: "#/components/schemas/Account"

    Results:
      description: Represents the results of a search.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/results/
      required:
        - accounts
        - statuses
        - hashtags
      properties:
        accounts:
          description: Accounts which match the given query.
          type: array
          items:
            $ref: "#/components/schemas/Account"
        statuses:
          description: Statuses which match the given query.
          type: array
          items:
            $ref: "#/components/schemas/Status"
        hashtags:
          description: Hashtags which match the given query.
          type: array
          items:
            $ref: "#/components/schemas/Tag"

    ScheduledStatus:
      description: Represents a status that will be published at a future scheduled date.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/scheduledstatus/
      required:
        - id
        - scheduled_at
        - params
        - media_attachments
      properties:
        id:
          description: ID of the scheduled status in the database. Cast from an integer, but not guaranteed to be a number.
          type: string
        scheduled_at:
          description: ID of the status in the database. ISO 8601 Datetime.
          type: string
          format: date-time
        params:
          $ref: "#/components/schemas/StatusParams"
        media_attachments:
          description: Array of attachements
          type: array
          items:
            $ref: "#/components/schemas/Attachment"

    StatusParams:
      properties:
        text:
          description: text
          type: string
        in_reply_to_id:
          description: in_reply_to_id
          type: string
        media_ids:
          description: media_ids
          type: array
          items:
            type: string
        sensitive:
          description: sensitive
          type: boolean
        spoiler_text:
          description: spoiler_text
          type: string
        visibility:
          description: visibility
          type: string
        scheduled_at:
          description: scheduled_at
          type: string
          format: date-time
        application_id:
          description: application_id
          type: string

    Source:
      description: Represents display or publishing preferences of user's own account. Returned as an additional entity when verifying and updated credentials, as an attribute of Account.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/source/
      type: object
      properties:
        # Base attributes
        note:
          description: Profile bio
          type: string
        fields:
          description: Metadata about the account.
          type: array
          items:
            $ref: "#/components/schemas/Field"
        # Nullable attributes
        privacy:
          description: The default post privacy to be used for new statuses.
          type: string
          enum:
            - "public"
            - "unlisted"
            - "private"
            - "direct"
        sensitive:
          description: Whether new statuses should be marked sensitive by default.
          type: boolean
        language:
          description: The default posting language for new statuses, ISO 639-1 language two-letter code.
          type: string
        follow_requests_count:
          description: The number of pending follow requests
          type: integer

    Status:
      description: Represents a status posted by an account.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/status/
      type: object
      properties:
        id:
          description: ID of the status in the database. Cast from an integer but not guaranteed to be a number.
          type: string
        uri:
          description: URI of the status used for federation.
          type: string
        created_at:
          description: The date when this status was created.
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/Account"
        content:
          description: HTML-encoded status content.
          type: string
        visibility:
          description: Visibility of this status.
          type: string
          enum:
            - public # Visible to everyone, shown in public timelines.
            - unlisted # Visible to public, but not included in public timelines.
            - private # Visible to followers only, and to any mentioned users.
            - direct # Visible only to mentioned users.
        sensitive:
          description: Is this status marked as sensitive content?
          type: boolean
        spoiler_text:
          description: Subject or summary line, below which status content is collapsed until expanded.
          type: string
        media_attachments:
          description: Media that is attached to this status.
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
        application:
          $ref: "#/components/schemas/Application"
        # Rendering attributes
        mentions:
          description: Mentions of users within the status content.
          type: array
          items:
            $ref: "#/components/schemas/Mention"
        tags:
          description: Hashtags used within the status content.
          type: array
          items:
            $ref: "#/components/schemas/Tag"
        emojis:
          description: Custom emoji to be used when rendering status content.
          type: array
          items:
            $ref: "#/components/schemas/Emoji"
        # Informational attributes
        reblogs_count:
          description: How many boosts this status has received.
          type: integer
        favourites_count:
          description: How many favourites this status has received.
          type: integer
        replies_count:
          description: How many replies this status has received.
          type: integer
        # Nullable attributes
        url:
          description: A link to the status's HTML representation.
          type: string
        in_reply_to_id:
          description: ID of the status being replied. Cast from an integer but not guaranteed to be a number.
          type: string
        in_reply_to_account_id:
          description: ID of the account being replied to.
          type: string
        reblog:
          $ref: "#/components/schemas/Status"
        poll:
          $ref: "#/components/schemas/Poll"
        card:
          $ref: "#/components/schemas/Card"
        language:
          description: Primary language of this status. ISO 639 Part 1 two-letter language code.
          type: string
        text:
          description: Plain-text source of a status. Returned instead of `content` when status is deleted, so the user may redraft from the source text without the client having to reverse-engineer the original text from the HTML content.
          type: string
        # Authorized user attributes
        favourited:
          description: Have you favourited this status?
          type: boolean
        reblogged:
          description: Have you boosted this status?
          type: boolean
        muted:
          description: Have you muted notifications for this status's conversation?
          type: boolean
        bookmarked:
          description: Have you bookmarked this status?
          type: boolean
        pinned:
          description: Have you pinned this status? Only appears if the status is pinnable.
          type: boolean


    Tag:
      description: Represents a hashtag used within the content of a status.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/tag/
      required:
        - name
        - url
      properties:
        name:
          description: The value of the hashtag after the `#` sign.
          type: string
        url:
          description: A link to the hashtag on the instance.
          type: string
        history:
          description: Usage statistics for given days.
          type: array
          items:
            $ref: "#/components/schemas/History"

    Token:
      description: Represents an OAuth token used for authenticating with the API and performing actions.
      externalDocs:
        url: https://docs.joinmastodon.org/entities/token/
      properties:
        access_token:
          description: An OAuth token to be used for authorization.
          type: string
        token_type:
          description: The OAuth token type. Mastodon uses `Bearer` tokens.
          type: string
        scope:
          description: The OAuth scopes granted by this token, space-separated.
          type: string
        created_at:
          description: When the token was generated. UNIX Timestamp.
          type: integer

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            "read:accounts": read accounts
            "write:accounts": write accounts
            "read:blocks": read blocks
            "write:blocks": write blocks
            "read:bookmarks": read bookmarks
            "write:bookmarks": write bookmarks
            "write:conversations": write conversations
            "read:favourites": read favourites
            "write:favourites": write favourites
            "read:filters": read filters
            "write:filters": write filters
            "read:follows": read follows
            "write:follows": write follows
            "read:lists": read lists
            "write:lists": write lists
            "write:media": write media
            "read:mutes": read mutes
            "write:mutes": write mutes
            "read:notifications": read notifications
            "write:notifications": write notifications
            "write:reports": write reports
            "read:search": read search
            "read:statuses": read statuses
            "write:statuses": write statuses
            "admin:read": admin read
            "admin:write": admin write
            "admin:read:accounts": read accounts
            "admin:write:accounts": write accounts
            "admin:read:reports": read reports
            "admin:write:reports": write reports